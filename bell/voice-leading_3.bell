## rank: 9.9
transform = (
    $triad, $key = 'p' -> (
        $map = (
            [
                'p' [
                    1 [1 0] [2 100] [3 0] 
                ] [
                    2 [1 0] [2 -100] [3 0] 
                ] 
            ] [
                'r' [
                    1 [1 -200] [2 0] [3 0] 
                ] [
                    2 [1 0] [2 0] [3 200] 
                ] 
            ] [
                'l' [
                    1 [1 0] [2 0] [3 100] 
                ] [
                    2 [1 -100] [2 0] [3 0] 
                ] 
            ] 
        );
        $triad = for $x $i in float($triad) collect [$i $x % 1200 $x];
        $triad = $triad.sort(
            ($a , $b -> $a::(1 2) < $b::(1 2)) 
        );
        $triad = trans($triad);
        $chord = $triad::3;
        $order = $triad::1;
        $triad = $triad::2;
        $dx = x2dx(thin($triad));
        if $dx == (400 300) then (
            $rolemap = [0 1] [400 2] [700 3];
            $mode = 2
        ) else if $dx == (300 500) then (
            $rolemap = [0 2] [300 3] [800 1];
            $mode = 2
        ) else if $dx == (500 400) then (
            $rolemap = [0 3] [500 1] [900 2];
            $mode = 2
        ) else if $dx == (300 400) then (
            $rolemap = [0 1] [300 2] [700 3];
            $mode = 1
        ) else if $dx == (400 500) then (
            $rolemap = [0 2] [400 3] [900 1];
            $mode = 1
        ) else if $dx == (500 300) then (
            $rolemap = [0 3] [500 1] [800 2];
            $mode = 1
        );
        $roles = for $p in int($triad - $triad.minimum()) collect $rolemap.$p;
        $next = trans(
            [$order] [$chord] [$roles] 
        );
        $next = for $x in $next with @unwrap 1 collect (
            $pos = $x:1;
            $mc = $x:2;
            $role = $x:3;
            $shift = $map.$key.$mode.$role;
            [$pos $mc + $shift $role] 
        );
        $next = $next.sort(
            ($a, $b -> $a::(1 1) < $b::(1 1)) 
        );
        trans($next)::2
    ) 
);
$triad = c5 g5 e6;
$onset = 0;
for $i in 1...8 do (
    for $t in 'l' 'r' 'p' 'r' do (
        for $mc in $triad do (
            ezsampler($mc).transcribe($onset) 
        );
        $onset += 750;
        $triad = transform($triad, $t) 
    ) 
);
compile()